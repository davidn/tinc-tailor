#!/usr/bin/env python

from tailor import Tailor
from argparse import ArgumentParser, REMAINDER
from logging import getLogger, DEBUG, StreamHandler, Formatter, INFO,\
    getLevelName, WARNING

class ColoredConsoleHandler(StreamHandler):
    def emit(self, record):
        # Need to make a actual copy of the record
        # to prevent altering the message for other loggers
        myrecord = copy(record)
        levelno = myrecord.levelno
        if(levelno >= 50):  # CRITICAL / FATAL
            color = '\x1b[31m'  # red
        elif(levelno >= 40):  # ERROR
            color = '\x1b[31m'  # red
        elif(levelno >= 30):  # WARNING
            color = '\x1b[33m'  # yellow
        elif(levelno >= 20):  # INFO
            color = '\x1b[32m'  # green
        elif(levelno >= 10):  # DEBUG
            color = '\x1b[35m'  # pink
        else:  # NOTSET and anything else
            color = '\x1b[0m'  # normal
        myrecord.msg = color + str(myrecord.msg) + '\x1b[0m'  # normal
        StreamHandler.emit(self, myrecord)

if __name__ == '__main__':
    parser = ArgumentParser(description='Install tinc on a set of servers.')
    parser.add_argument('-n','--netname', type=str, default='cf', help='Tinc netname')
    parser.add_argument('-l','--log-level', default=WARNING, help='Level log detail to log')
    parser.add_argument('--global-log-level', default=None, help='Level log all messages')
    subparsers = parser.add_subparsers(title='command', dest='subcommand')
    install_parser = subparsers.add_parser('install', help='install tinc on the given hosts.')
    install_parser.add_argument('hosts', type=str, nargs='+')
    remove_parser = subparsers.add_parser('remove', help='remove tinc from the given hosts.')
    remove_parser.add_argument('hosts', type=str, nargs='+')
    test_parser = subparsers.add_parser('test', help='test all hosts are able to ping each other.')
    run_parser = subparsers.add_parser('run', help='run a command on all hosts.')
    run_parser.add_argument('command', type=str, nargs=REMAINDER)
    refresh_parser = subparsers.add_parser('refresh', help='reload tinc configuration on all hosts.')
    params = parser.parse_args()
    root = getLogger('')
    if params.global_log_level is not None:
        root.setLevel(params.global_log_level)
    handler = ColoredConsoleHandler()
    handler.setFormatter(Formatter('%(name)s: %(message)s'))
    root.addHandler(handler)
    logger = getLogger('tailor')
    logger.setLevel(params.log_level)
    logger.debug("Starting tailor")
    t = Tailor(netname=params.netname)
    if params.subcommand == 'install':
        t.install(params.hosts)
        t.refresh()
    elif params.subcommand == 'remove':
        t.remove(params.hosts)
        t.refresh()
    elif params.subcommand == 'test':
        t.test()
    elif params.subcommand == 'run':
        hosthandler = StreamHandler()
        hosthandler.setFormatter(Formatter('%(name)s: %(message)s'))
        hostlogger = getLogger('tailor.host')
        root.removeHandler(handler)
        hostlogger.addHandler(hosthandler)
        hostlogger.setLevel(DEBUG)
        t.run(" ".join(params.command))
    elif params.subcommand == 'refresh':
        t.refresh()
